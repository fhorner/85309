T2 <- choiceDse[[pred]][choiceDse$dse == 1]
ttest <- t.test(x = T1, y = T2)
print(ttest$p.value)
i = i + 1
}
outT <- outDSE <- data.frame(pred = c("happy", "depr", "anger","anx", "deal", "es",
"is","unsup","Zperpos", "Zperneg",
"test","reading","diet"),
p = NA)
for (pred in outT$pred){
i = 1
T1 <- choiceDse[[pred]][choiceDse$dse == 0]
T2 <- choiceDse[[pred]][choiceDse$dse == 1]
ttest <- t.test(x = T1, y = T2)
print(ttest$p.value)
i = i + 1
}
outT <- outDSE <- data.frame(pred = c("happy", "depr", "anger","anx", "deal", "es",
"is","unsup","Zperpos", "Zperneg",
"test","reading","diet"),
p = NA)
for (pred in outT$pred){
i = 1
T1 <- choiceDse[[pred]][choiceDse$dse == 0]
T2 <- choiceDse[[pred]][choiceDse$dse == 1]
ttest <- t.test(x = T1, y = T2)
i = i + 1
}
View(outT)
outT <- outDSE <- data.frame(pred = c("happy", "depr", "anger","anx", "deal", "es",
"is","unsup","Zperpos", "Zperneg",
"test","reading","diet"),
p = NA)
for (pred in outT$pred){
T1 <- choiceDse[[pred]][choiceDse$dse == 0]
T2 <- choiceDse[[pred]][choiceDse$dse == 1]
ttest <- t.test(x = T1, y = T2)
print(ttest$p.value)
}
outT <- outDSE <- data.frame(pred = c("happy", "depr", "anger","anx", "deal", "es",
"is","unsup","Zperpos", "Zperneg",
"test","reading","diet"),
p = NA)
for (pred in outT$pred){
print(pred)
T1 <- choiceDse[[pred]][choiceDse$dse == 0]
T2 <- choiceDse[[pred]][choiceDse$dse == 1]
ttest <- t.test(x = T1, y = T2)
print(ttest$p.value)
}
choiceDse %>%
select(respid, dse, happy) %>%
head()
choiceDse %>%
select(respid, day, dse, happy) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
# pivot_wider(names_from = )
head()
?pivot_wider
choiceDse %>%
select(respid, day, dse, happy) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = c(day, happy))
head()
choiceDse %>%
select(respid, day, dse, happy) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = c(happy))
head()
choiceDse %>%
select(respid, day, dse, happy) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = happy)
head()
choiceDse %>%
select(respid, day, dse, happy) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = happy) %>%
head()
wide <- choiceDse %>%
select(respid, day, dse, happy) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = happy) %>%
head()
wide <- choiceDse %>%
select(respid, day, dse, happy) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = happy)
View(wide)
wide <- choiceDse %>%
select(respid, day, dse, happy) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = happy) %>%
drop_na()
t.test(wide$choice, wide$dse, paired = T)
outT <- outDSE <- data.frame(pred = c("happy", "depr", "anger","anx", "deal", "es",
"is","unsup","Zperpos", "Zperneg",
"test","reading","diet"),
p = NA)
for (pred in outT$pred){
wide <- choiceDse %>%
select(respid, day, dse, pred) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = pred) %>%
drop_na()
t.test(wide$choice, wide$dse, paired = T)
print(pred, t.test$p.value)
}
outT <- outDSE <- data.frame(pred = c("happy", "depr", "anger","anx", "deal", "es",
"is","unsup","Zperpos", "Zperneg",
"test","reading","diet"),
p = NA)
for (pred in outT$pred){
wide <- choiceDse %>%
select(respid, day, dse, pred) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = pred) %>%
drop_na()
t.test(wide$choice, wide$dse, paired = T)
print(pred)
print(t.test$p.value)
}
outT <- outDSE <- data.frame(pred = c("happy", "depr", "anger","anx", "deal", "es",
"is","unsup","Zperpos", "Zperneg",
"test","reading","diet"),
p = NA)
for (pred in outT$pred){
wide <- choiceDse %>%
select(respid, day, dse, pred) %>%
mutate(dse = if_else(dse == 0, "choice", "dse")) %>%
pivot_wider(names_from = dse, values_from = pred) %>%
drop_na()
t <- t.test(wide$choice, wide$dse, paired = T)
print(pred)
print(t$p.value)
}
View(choiceDse)
saDeal <- lmer(deal ~ dse*appraisBS + dse*appraisWS + day + (1 | respid) + (appraisWS | respid), data = choiceDse )
saDeal <- lmer(deal ~ dse*appraisBS + dse*appraisWS + day + (1 | respid), data = choiceDse )
summary(saDeal)
saDeal <- lmerTest::lmer(deal ~ dse*appraisBS + dse*appraisWS + day + (1 | respid), data = choiceDse )
summary(saDeal)
library(sjPlot)
install.packages("sjPlot")
library(sjPlot)
plot_model(saDeal, type = "pred", terms = c(appraisWS, dse))
?plot_model
plot_model(saDeal, type = "pred", terms = c('appraisWS', 'dse'))
simple_slopes(saDeal)
library(reghelper)
#library(reghelper)
simple_slopes(saDeal)
#library(reghelper)
simple_slopes(saDeal)
?simple_slopes
class(choiceDse$dse)
choiceDse$dse = as.factor(choiceDse$dse)
saDeal <- lmerTest::lmer(deal ~ dse*appraisBS + dse*appraisWS + day + (1 | respid), data = choiceDse )
summary(saDeal)
plot_model(saDeal, type = "pred", terms = c('appraisWS', 'dse'))
#library(reghelper)
simple_slopes(saDeal)
#library(reghelper)
simple_slopes(saDeal)
#library(reghelper)
simple_slopes(saDeal, levels = c(dse, appraisWS))
choiceDse$dse = as.factor(choiceDse$dse)
saDeal <- lmerTest::lmer(deal ~ appraisWS + dse*appraisBS + day + (1 | respid), data = choiceDse )
summary(saDeal)
#library(reghelper)
simple_slopes(saDeal)
choiceDse$dse = as.factor(choiceDse$dse)
saDeal <- lmerTest::lmer(deal ~ appraisWS*dse + dse*appraisBS + day + (1 | respid), data = choiceDse )
summary(saDeal)
#library(reghelper)
simple_slopes(saDeal)
choiceDse$dse = as.factor(choiceDse$dse)
saDeal <- lmerTest::lmer(deal ~ appraisWS*dse + dse*appraisBS + day + (1 | respid), data = choiceDse )
#summary(saDeal)
colunsup <- lmerTest::lmer(unsup ~ dse*collabBP + dse*collabBS + day + (1 | respid), data = choiceDse )
colunsup <- lmerTest::lmer(unsup ~ dse*collabBS + dse*collabBS + day + (1 | respid), data = choiceDse )
plot_model(saDeal, type = "pred", terms = c('collabBS', 'dse'))
choiceDse$collabBS
colunsup <- lmerTest::lmer(unsup ~ dse*collabBS + dse*collabBS + day + (1 | respid), data = choiceDse )
plot_model(colunsup, type = "pred", terms = c('collabBS', 'dse'))
colunsup <- lmerTest::lmer(unsup ~ dse*collabBS + dse*collabWS + day + (1 | respid), data = choiceDse )
plot_model(colunsup, type = "pred", terms = c('collabBS', 'dse'))
simple_slopes(colunsup)
simple_slopes(colunsup)
colunsup <- lmerTest::lmer(es ~  dse*collabWS + dse*collabBS + day + (1 | respid), data = choiceDse )
plot_model(colunsup, type = "pred", terms = c('collabWS', 'dse'))
colES <- lmerTest::lmer(es ~  dse*collabWS + dse*collabBS + day + (1 | respid), data = choiceDse )
plot_model(colES, type = "pred", terms = c('collabWS', 'dse'))
simple_slopes(colES)
colperNeg <- lmerTest::lmer(es ~  dse*collabWS + dse*collabBS + day + (1 | respid), data = choiceDse )
plot_model(colperNeg, type = "pred", terms = c('collabWS', 'dse'))
colperNeg <- lmerTest::lmer(Zperneg ~  dse*collabWS + dse*collabBS + day + (1 | respid), data = choiceDse )
plot_model(colperNeg, type = "pred", terms = c('collabWS', 'dse'))
simple_slopes(colperNeg)
saUnsup <- lmerTest::lmer(unsup ~  dse*appraisWS + dse*appraisBS + day + (1 | respid), data = choiceDse )
plot_model(saUnsup, type = "pred", terms = c('collabWS', 'dse'))
saUnsup <- lmerTest::lmer(unsup ~  dse*appraisWS + dse*appraisBS + day + (1 | respid), data = choiceDse )
plot_model(saUnsup, type = "pred", terms = c('appraisWS', 'dse'))
simple_slopes(saUnsup)
saUnsup <- lmerTest::lmer(unsup ~  dse*appraisWS + dse*appraisBS + day + (1 | respid) + (appraisWS|respid), data = choiceDse )
plot_model(saUnsup, type = "pred", terms = c('appraisWS', 'dse'))
simple_slopes(saUnsup)
colBP <- lmerTest::lmer(reading ~  dse*collabBS + dse*collabWS + day + (1 | respid) + (collabWS|respid), data = choiceDse )
plot_model(colBP, type = "pred", terms = c('collabBS', 'dse'))
simple_slopes(colBP)
simple_slopes(colBP)
colBP <- lmerTest::lmer(diet ~  dse*collabBS + day + (1 | respid), data = choiceDse )
plot_model(colBP, type = "pred", terms = c('collabBS', 'dse'))
coldiet <- lmerTest::lmer(diet ~  dse*collabBS + day + (1 | respid), data = choiceDse )
plot_model(coldiet, type = "pred", terms = c('collabBS', 'dse'))
simple_slopes(coldiet)
coldiet <- lmerTest::lmer(diet ~  dse*collabBS + collabWS + day + (1 | respid), data = choiceDse )
plot_model(coldiet, type = "pred", terms = c('collabBS', 'dse'))
simple_slopes(coldiet)
coldiet <- lmerTest::lmer(test ~  dse*appraisBS + appraisWS + day + (1 | respid), data = choiceDse )
plot_model(coldiet, type = "pred", terms = c('collabBS', 'dse'))
coldiet <- lmerTest::lmer(test ~  dse*appraisBS + appraisWS + day + (1 | respid), data = choiceDse )
plot_model(coldiet, type = "pred", terms = c('appraisBS', 'dse'))
coldiet <- lmerTest::lmer(as.factor(test) ~  dse*appraisBS + appraisWS + day + (1 | respid), data = choiceDse )
coldiet <- lmerTest::lmer(test~  dse*appraisBS + appraisWS + day + (1 | respid), data = choiceDse )
plot_model(coldiet, type = "pred", terms = c('appraisBS', 'dse'))
sadiet <- lmerTest::lmer(test~  dse*appraisBS + appraisWS + day + (1 | respid), data = choiceDse )
plot_model(sadiet, type = "pred", terms = c('appraisBS', 'dse'))
simple_slopes(sadiet)
saRead <- lmerTest::lmer(reading ~  dse*appraisBS + appraisWS + day + (1 | respid), data = choiceDse )
plot_model(saRead, type = "pred", terms = c('appraisBS', 'dse'))
simple_slopes(saRead)
tutorial.dat<-read.csv("https://raw.githubusercontent.com/jrasero/cm-85309-2023/main/datasets/parenthood.csv")
setwd("/Users/fiona/Documents/TA/2024_85309/85309/Tutorials")
tutorial.dat<-read.csv("https://raw.githubusercontent.com/jrasero/cm-85309-2023/main/datasets/parenthood.csv")
write_csv(tutorial.dat, file = "regressionData.csv")
ggplot(data=tutorial.dat, mapping = aes(x=parent.sleep, parent.grump)) +
geom_point(size=3, color="blue") +
xlab("Number of parent's hours of sleep") +
ylab("Level of parent's grumpiness") + theme_classic() +
theme(axis.title = element_text(size = 20), axis.text = element_text(size=15))
ggplot(data=tutorial.dat, mapping = aes(x=parent.sleep, parent.grump)) +
geom_point(size=3, color="blue") +
xlab("Parent Sleep (hrs)") +
ylab("Parent grumpiness") + theme_classic()
# We'll fill this in together
cor.res<-cor.test(~parent.grump + parent.sleep, data = tutorial.dat)
cor.res
# Equivalently:
cor.res <- cor.test(x = tutorial.dat$parent.grump, y = tutorial.dat$parent.sleep)
cor.res
# We'll fill this in together
cor.res<-cor.test(~parent.grump + parent.sleep, data = tutorial.dat)
# Equivalently:
cor.res <- cor.test(x = tutorial.dat$parent.grump, y = tutorial.dat$parent.sleep)
cor.res
ggplot(data=tutorial.dat, mapping = aes(x=parent.sleep, parent.grump)) +
geom_point(size=3, color="blue") +
geom_smooth(method = lm, color="red", se = FALSE) +
xlab("Number of parent's hours of sleep") +
ylab("Level of parent's grumpiness") + theme_classic() +
theme(axis.title = element_text(size = 20), axis.text = element_text(size=15))
ggplot(data=tutorial.dat, mapping = aes(x=parent.sleep, parent.grump)) +
geom_point(size=3, color="blue") +
geom_smooth(method = lm, color="red", se = FALSE) +
xlab("Parent Sleep (hrs)") +
ylab("Parent Grumpiness") + theme_classic()
reg.model.1 <- lm(formula = parent.grump ~ parent.sleep, data=tutorial.dat)
summary(reg.model.1)
reg.model.1$coefficients
reg.model.1 <- lm(formula = parent.grump ~ parent.sleep, data=tutorial.dat)
summary(reg.model.1)
reg.model.1$coefficients
names(reg.model.1)
View(reg.model.1)
125.9563/3.0161
names(reg.model.1)
View(reg.model.1)
names(summar(reg.model.1))
names(summary(reg.model.1))
summary(reg.model.1)$fstatistic
summaryObject <- summary(reg.model.1)
summaryObject$fstatistic
View(summaryObject)
summaryObject[["coefficients"]]
summaryModel[["r.squared"]]
summaryObject[["r.squared"]]
summaryObject[["adj.r.squared"]]
View(cor.res)
cor.res$estimate
cor.res$estimate^2
summaryObject[["r.squared"]]
summaryObject[["adj.r.squared"]]
summaryObject$coefficients
cor.test
summaryObject$coefficients
summary(cor.test)
cor.rest
summaryObject$coefficients
cor.res
reg.model.2<-lm(formula = parent.grump ~ parent.sleep + baby.sleep, data=tutorial.dat)
summary(reg.model.2)
reg.model.2<-lm(formula = parent.grump ~ parent.sleep + baby.sleep, data=tutorial.dat)
mod2Summary <- summary(reg.model.2)
mod2Summary
head(reg.model.2$residuals)
head(mod2Summary$residuals)
#these are the same:
head(reg.model.2$residuals)
head(mod2Summary$residuals)
#save for simplicity
res <- reg.model.2$residuals
#these are the same:
head(reg.model.2$residuals)
head(mod2Summary$residuals)
#save for simplicity
res <- as.data.frame(reg.model.2$residuals)
View(res)
#these are the same:
head(reg.model.2$residuals)
head(mod2Summary$residuals)
#save for simplicity
res <- as.data.frame(res = reg.model.2$residuals)
#these are the same:
head(reg.model.2$residuals)
head(mod2Summary$residuals)
#save for simplicity
res <- as.data.frame(res <- reg.model.2$residuals)
View(res)
#these are the same:
head(reg.model.2$residuals)
head(mod2Summary$residuals)
#save for simplicity
res <- reg.model.2$residuals
hisogram(res)
histogram(res)
histogram(res)
hist(res)
hist(res, bins = 30)
?hist
hist(res, breaks = 30)
as.data.frame(reg.model.2$residuals) %>%
ggplot(breaks = 30)
as.data.frame(reg.model.2$residuals) %>%
ggplot(aes(x = reg.model.2$residuals), breaks = 30)
as.data.frame(reg.model.2$residuals) %>%
ggplot(aes(x = reg.model.2$residuals)) + geom_histogram()
as.data.frame(reg.model.2$residuals) %>%
ggplot(aes(x = reg.model.2$residuals)) + geom_histogram(bins = 20)
summary(res)
summaryObject <- summary(reg.model.1)
summaryObject$ coefficients
?confint
confint(object = reg.model.2, level = .95)
View(tutorial.dat)
?rep
tutorial.dat <- tutorial.dat %>%
mutate(day = rep(seq(1:7), length.out = 100))
View(tutorial.dat)
write_csv(tutorial.dat, "regressionData.csv")
setwd("/Users/fiona/Documents/TA/2024_85309/85309/Tutorials")
tutorial.dat<-read.csv("regressionData.csv")
library(tidyverse)
View(tutorial.dat)
tutorial.dat$day <- as.factor(tutorial.dat$day)
reg.model.3 <- lm(formula = parent.grump ~ parent.sleep + baby.sleep + day,
data=tutorial.dat)
summary(reg.model.3)
library(fastDummies)
?fastDummies
?dummy
?dummy_cols
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select.columns = day)
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select.columns = "day")
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select.columns = c("day"))
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select_columns = c("day"))
View(dummies)
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select_columns = c("day"))
head(dummies, n = 7)
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select_columns = c("day")) %>%
select(starts_with(day))
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select_columns = c("day")) %>%
select(starts_with('day'))
head(dummies, n = 7)
dummyMod <- lm(formula = parent.grump ~ parent.sleep + baby.sleep +
day_2 + day_3 + day_4 + day_5 + day_6 + day_7,
data=dummies)
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select_columns = c("day"))
dummies %>%
select(starts_with('day')) %>%
head(dummies, n = 7)
dummyMod <- lm(formula = parent.grump ~ parent.sleep + baby.sleep +
day_2 + day_3 + day_4 + day_5 + day_6 + day_7,
data=dummies)
summary(dummyMod)
#these are the same:
head(reg.model.3$residuals)
head(mod2Summary$residuals)
as.data.frame(reg.model.3$residuals) %>%
ggplot(aes(x = reg.model.3$residuals)) + geom_histogram(bins = 20)
as.data.frame(reg.model.3$residuals) %>%
ggplot(aes(x = reg.model.3$residuals)) + geom_histogram(bins = 15)
summary(reg.model.3$residuals)
plot(reg.model.2, which=3)
plot(reg.model.3, which=3)
tutorial.dat<-read.csv("regressionData.csv")
library(tidyverse)
ggplot(data=tutorial.dat, mapping = aes(x=parent.sleep, parent.grump)) +
geom_point(size=3, color="blue") +
xlab("Parent Sleep (hrs)") +
ylab("Parent grumpiness") + theme_classic()
# We'll fill this in together
cor.res<-cor.test(~parent.grump + parent.sleep, data = tutorial.dat)
# Equivalently:
cor.res <- cor.test(x = tutorial.dat$parent.grump, y = tutorial.dat$parent.sleep)
cor.res
ggplot(data=tutorial.dat, mapping = aes(x=parent.sleep, parent.grump)) +
geom_point(size=3, color="blue") +
geom_smooth(method = lm, color="red", se = FALSE) +
xlab("Parent Sleep (hrs)") +
ylab("Parent Grumpiness") + theme_classic()
?lm
reg.model.1 <- lm(formula = parent.grump ~ parent.sleep, data=tutorial.dat)
summary(reg.model.1)
reg.model.1$coefficients
summaryObject <- summary(reg.model.1)
summaryObject$ coefficients
summaryObject <- summary(reg.model.1)
summaryObject$ coefficients
View(summaryObject)
pf(434.9, df1 = 1, df2 = 98)
pf(434.9, df1 = 98, df2 = 1)
pf(434.9, df1 = 98, df2 = 1, lower.tail = FALSE)
pf(434.9, df1 = 1, df2 = 98, lower.tail = FALSE)
lmtest <- lm(formula = parent.grump ~ baby.sleep, data=tutorial.dat)
summary(lmtest)
pf(46.18, df1 = 1, df2 = 98, lower.tail = FALSE)
View(tutorial.dat)
lmtest <- lm(formula = parent.sleep ~ baby.sleep, data=tutorial.dat)
summary(lmtest)
pf(63.8, df1 = 1, df2 = 98, lower.tail = FALSE)
summaryObject[["r.squared"]]
cor.res$estimate
cor.res$estimate^2
summaryObject[["adj.r.squared"]]
summaryObject$coefficients
cor.res
reg.model.2<-lm(formula = parent.grump ~ parent.sleep + baby.sleep,
data=tutorial.dat)
mod2Summary <- summary(reg.model.2)
mod2Summary
confint(object = reg.model.2, level = .95)
tutorial.dat$day <- as.factor(tutorial.dat$day)
reg.model.3 <- lm(formula = parent.grump ~ parent.sleep + baby.sleep + day,
data=tutorial.dat)
summary(reg.model.3)
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select_columns = c("day"))
dummies %>%
select(starts_with('day')) %>%
head(dummies, n = 7)
library(fastDummies)
dummies <- dummy_cols(tutorial.dat, select_columns = c("day"))
dummies %>%
select(starts_with('day')) %>%
head(dummies, n = 7)
dummyMod <- lm(formula = parent.grump ~ parent.sleep + baby.sleep +
day_2 + day_3 + day_4 + day_5 + day_6 + day_7,
data=dummies)
summary(dummyMod)
?plot
plot(reg.model.2, which=1)
View(reg.model.2)
plot(reg.model.3, which=3)
summary(reg.model.3$residuals)
head(reg.model.3$residuals)
plot(reg.model.2, which=1)
plot(reg.model.3, which=3)
plot(reg.model.2, which=4)
View(tutorial.dat)
View(tutorial.dat)
tutorial.dat$parent.grump[1] = 150
test <- lm(parent.grump ~ parent.sleep + baby.sleep + day,
data = tutorial.dat)
plot(test, which=4)
tutorial.dat$parent.grump[15] = 150
test <- lm(parent.grump ~ parent.sleep + baby.sleep + day,
data = tutorial.dat)
plot(test, which=4)
tutorial.dat<-read.csv("regressionData.csv")
library(tidyverse)
copy <- tutorial.dat
copy$parent.grump[15] = 250
test <- lm(parent.grump ~ parent.sleep + baby.sleep + day,
data = copy)
plot(test, which=4)
plot(reg.model.2, which=5)
plot(test, which=5)
plot(reg.model.2, which=5)
acf(reg.model.2$residuals, type = "correlation")
acf(reg.model.2$residuals, type = "correlation")
cor.test(tutorial.dat$parent.sleep, tutorial.dat$baby.sleep)
cor.test(tutorial.dat$parent.sleep, tutorial.dat$parent.grump)
#your code here
